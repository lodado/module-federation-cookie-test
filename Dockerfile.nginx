# Multi-stage build
FROM node:18-alpine AS builder

# 작업 디렉토리 설정
WORKDIR /app

# 루트 package.json과 yarn.lock 복사
COPY package.json yarn.lock ./

# 의존성 설치
RUN yarn install --frozen-lockfile

# 모든 앱 소스코드 복사
COPY apps/ ./apps/
COPY tsconfig.json ./
COPY turbo.json ./

# 프로덕션 모드로 webpack 앱들만 빌드 (auth-server 제외)
ENV NODE_ENV=production
RUN yarn turbo run build --filter=!auth-server

# Nginx 단계
FROM nginx:alpine

# 기본 nginx 설정 제거
RUN rm /etc/nginx/conf.d/default.conf

# 커스텀 nginx 설정 복사
COPY nginx.conf /etc/nginx/nginx.conf

# 빌드된 정적 파일들을 nginx 디렉토리에 복사
COPY --from=builder /app/apps/shell/dist/ /usr/share/nginx/html/shell/
COPY --from=builder /app/apps/remote1/dist/ /usr/share/nginx/html/remote1/
COPY --from=builder /app/apps/remote2/dist/ /usr/share/nginx/html/remote2/
COPY --from=builder /app/apps/auth-frontend/dist/ /usr/share/nginx/html/auth-frontend/

# 포트 80 노출
EXPOSE 80

# nginx 실행
CMD ["nginx", "-g", "daemon off;"]
