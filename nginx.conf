events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 🔄 동적 CORS 오리진 처리 - 개발 환경용
    # $http_origin 변수를 기반으로 허용된 오리진만 동적으로 설정
    map $http_origin $cors_origin {
        default "";
        # 개발 환경 - localhost 포트들 허용 (3000-3009)
        "~^http://localhost:300[0-9]$" $http_origin;
        # 프로덕션 환경에서는 아래와 같이 실제 도메인 사용
        # "https://yourdomain.com" $http_origin;
        # "https://app.yourdomain.com" $http_origin;
    }

    server {
        listen 80;
        server_name localhost;
        
        # ⚠️ CORS 헤더 설정 - 개발 환경용 (프로덕션에서는 수정 필요!)
        # 현재 와일드카드(*) 설정은 테스트 목적으로만 사용
        # 프로덕션에서는 반드시 특정 도메인으로 제한해야 함
        # 예: add_header Access-Control-Allow-Origin "https://yourdomain.com";
        add_header Access-Control-Allow-Origin "http://localhost:3000";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        # 개발 환경에서 추가 오리진 허용 (필요에 따라 주석 해제)
        # add_header Access-Control-Allow-Origin "http://localhost:3001" always;
        # add_header Access-Control-Allow-Origin "http://localhost:3002" always;
        # add_header Access-Control-Allow-Origin "http://localhost:3004" always;
        
        # Shell App (메인 컨테이너) - 루트에서 서빙
        location / {
            root /usr/share/nginx/html/shell;
            try_files $uri $uri/ /index.html;
            
            # Module Federation을 위한 JS 파일 캐시 설정
            location ~* \.js$ {
                expires 1h;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Remote1 마이크로앱
        location /remote1/ {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /remote1/index.html;
            
            # remoteEntry.js는 캐시하지 않음
            location = /remote1/remoteEntry.js {
                root /usr/share/nginx/html;
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # Remote2 마이크로앱
        location /remote2/ {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /remote2/index.html;
            
            # remoteEntry.js는 캐시하지 않음
            location = /remote2/remoteEntry.js {
                root /usr/share/nginx/html;
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        

        
        # Auth Frontend 앱 
        location /auth/ {
            alias /usr/share/nginx/html/auth-frontend/;
            try_files $uri $uri/ /auth/index.html;
        }
        
        # Auth Server API (Next.js 서버로 프록시)
        location /api/ {
            proxy_pass http://auth-server:3003;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 개발 환경 - localhost 오리진들만 허용
            add_header Access-Control-Allow-Origin "http://localhost:3000";
            add_header Access-Control-Allow-Credentials true;
            
            # 프로덕션 환경에서는 아래와 같이 실제 도메인 사용
            # add_header Access-Control-Allow-Origin "https://yourdomain.com";
            # add_header Access-Control-Allow-Credentials true;
            
            # OPTIONS 프리플라이트 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:3000";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # 정적 파일들 (이미지, 폰트 등) - JS 파일 제외
        location ~* \.(jpg|jpeg|png|gif|ico|css|woff|woff2|ttf|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
